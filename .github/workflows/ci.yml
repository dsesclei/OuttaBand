name: ci

on:
  push: { branches: ["main"] }
  pull_request: { branches: ["main"] }

permissions:
  contents: read

jobs:
  lint-type-test:
    name: lint • type • test (py311)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v3
      - name: Install deps
        run: uv sync --all-extras --dev
      - name: ruff (lint)
        run: uv run ruff check .
      - name: ruff (fmt check)
        run: uv run ruff format --check .
      - name: mypy
        run: uv run mypy .
      - name: pytest
        run: uv run pytest -q -m "not net" --cov

  container-smoke:
    name: container build + compose smoke
    needs: [lint-type-test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Build (load locally for compose & scanners)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          load: true
          platforms: linux/amd64          # Load supports single arch
          tags: lpbot:ci                  # Matches docker-compose.ci.yml
          build-args: |
            SERVICE_VERSION=${{ github.sha }}

      - name: Run compose
        run: docker compose -f docker-compose.ci.yml up -d

      - name: Probe /healthz
        run: |
          for attempt in $(seq 30); do
            code=$(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:8000/healthz || true)
            [ "$code" = "200" ] && exit 0
            sleep 2
          done
          echo "healthz never returned 200 after ${attempt} attempts"
          docker compose -f docker-compose.ci.yml logs || true
          exit 1

      - name: Teardown
        if: always()
        run: docker compose -f docker-compose.ci.yml down

  release:
    name: release on tag
    if: startsWith(github.ref, 'refs/tags/')
    needs: [container-smoke]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.ref_name }}
          build-args: |
            SERVICE_VERSION=${{ github.ref_name }}
